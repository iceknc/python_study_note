# -*- coding: utf-8 -*-
# @Author: 徐志鹏
# @Date  : 2019/5/28
# @Desc  :
"""
RDBMS
    Relational Database Management System
    通过表来表示关系型
    当前主要使用两种类型的数据库：关系型数据库、非关系型数据库，本部分主要讨论关系型数据库，对于非关系型数据库会在后面学习
    所谓的关系型数据库RDBMS，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据

    关系型数据库的主要产品
        oracle：在以前的大型项目中使用,银行,电信等项目
        mysql：web时代使用最广泛的关系型数据库
        ms sql server：在微软的项目中使用
        sqlite：轻量级数据库，主要应用在移动平台

SQL
    Structured Query Language
    SQL是结构化查询语言，是一种用来操作RDBMS的数据库语言，当前关系型数据库都支持使用SQL语言进行操作,也就是说可以通过 SQL 操作
    oracle,sql server,mysql,sqlite 等等所有的关系型的数据库

    SQL语句主要分为：
        DQL：数据查询语言，用于对数据进行查询，如select
        DML：数据操作语言，对数据进行增加、修改、删除，如insert、udpate、delete
        TPL：事务处理语言，对事务进行处理，包括begin transaction、commit、rollback
        DCL：数据控制语言，进行授权与权限回收，如grant、revoke
        DDL：数据定义语言，进行数据库、表的管理等，如create、drop
        CCL：指针控制语言，通过控制指针完成表的操作，如declare cursor

数据类型
    使用数据类型的原则是：够用就行，尽量使用取值范围小的，而不用大的，这样可以更多的节省存储空间
    常用数据类型如下：
        整数：int，bit
        小数：decimal
        字符串：varchar,char
        日期时间: date, time, datetime
        枚举类型(enum)
    特别说明的类型如下：
        decimal表示浮点数，如decimal(5,2)表示共存5位数，小数占2位
        char表示固定长度的字符串，如char(3)，如果填充'ab'时会补一个空格为'ab '
        varchar表示可变长度的字符串，如varchar(3)，填充'ab'时就会存储'ab'
        字符串text表示存储大文本，当字符大于4000时推荐使用
        对于图片、音频、视频等文件，不存储在数据库中，而是上传到某个服务器上，然后在表中存储这个文件的保存路径
    约束
        主键primary key：物理上存储的顺序
        非空not null：此字段不允许填写空值
        惟一unique：此字段的值不允许重复
        默认default：当不填写此值时会使用默认值，如果填写时以填写为准
        外键foreign key：对关系字段进行约束，当为关系字段填写值时，会到关联的表中查询此值是否存在，如果存在则填写成功，
        如果不存在则填写失败并抛出异常
        说明：虽然外键约束可以保证数据的有效性，但是在进行数据的crud（增加、修改、删除、查询）时，都会降低数据库的性能，所以不推荐使用，
        那么数据的有效性怎么保证呢？答：可以在逻辑层进行控制


    |--------------------------------------------------------------------------------------------------------|
    | type      |byte size |                         instance                                                |
    |--------------------------------------------------------------------------------------------------------|
    |TINYINT    |  1       | -128~127(Signed)      0~255(Unsigned)                                           |
    |--------------------------------------------------------------------------------------------------------|
    |SMALLINT   |  2       | -32768~32767(Signed)  0~65535(Unsigned)                                         |
    |--------------------------------------------------------------------------------------------------------|
    |MEDIUMINT  |  3       | -8388608~8388607(Signed) 0~16777215(Unsigned)                                   |
    |--------------------------------------------------------------------------------------------------------|
    |INT/INTEGER|  4       | -2147483648~2147483647(Signed) 0~4294967295(Unsigned)                           |
    |--------------------------------------------------------------------------------------------------------|
    |BIGINT     |  8       |-9223372036854775808~9223372036854775807(Signed) 0~18446744073709551615(Unsigned)|
    |--------------------------------------------------------------------------------------------------------|
    |CHAR       | 0-255    | char(3) input 'ab', save 'ab ', input'abcd' save 'abc'                          |
    |--------------------------------------------------------------------------------------------------------|
    |VARCHAR    | 0-255    | varchar(3) input 'ab' save'ab', input'abcd' save'abc'                           |
    |--------------------------------------------------------------------------------------------------------|
    |TEXT       | 0-65536  | text                                                                            |
    |--------------------------------------------------------------------------------------------------------|
    |DATE       |  4       | '2020-01-01'                                                                    |
    |--------------------------------------------------------------------------------------------------------|
    |TIME       |  3       | '12:29:59'                                                                      |
    |--------------------------------------------------------------------------------------------------------|
    |DATETIME   |  8       | '2020-01-01 12:29:59'                                                           |
    |--------------------------------------------------------------------------------------------------------|
    |YEAR       |  1       | '2017'                                                                          |
    |--------------------------------------------------------------------------------------------------------|
    |TIMESTAMP  |  4       | '1970-01-01 00:00:01' UTC ~ '2038-01-01 00:00:01' UTC                           |
    |--------------------------------------------------------------------------------------------------------|



"""


def main():
    pass


if __name__ == "__main__":
    main()
    






